version: '2.1'
orbs:
  slack: circleci/slack@4.1
  node: 'circleci/node:4.1'

jobs:
  
  
  plan-apply:
    working_directory: ~/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            echo ssh key is ${SSH_BIG_APP}
            cd terraform
            terraform init -input=false
            terraform plan  
      - persist_to_workspace:
          root: .
          paths: 
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      # - run:
      #     name: terraform
      #     command: |
      #       cd terraform
      #       terraform apply -auto-approve 
      #       terraform output -raw instance_pub_ip
      - run:
          name: github login
          command: |
            cd terraform
            chmod 400 pipe_ssh
            scp -i pipe_ssh -o "StrictHostKeyChecking no" pipe_ssh ubuntu@184.72.68.239:/home/ubuntu
            ssh -i pipe_ssh -o "StrictHostKeyChecking no" ubuntu@184.72.68.239 'bash -s' \<< 'ENDSSH'
              chmod 400 pipe_ssh
              exec ssh-agent bash
              ssh-add pipe_ssh
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts
              git clone git@github.com:Kura-Team-6/pipe-in-a-pipe.git
              cd pipe-in-a-pipe
              git checkout working-1-19
              docker build -t react-container client/.
              docker build -t flask-container backend-flask/.
              docker run -d -p 3000:3000 react-container 
              docker run -d -p 5000:5000 flask-container
            ENDSSH

          #   ssh -v hector6921@github.com &
          #   ssh -i pipe_ssh -o "StrictHostKeyChecking no" git@github.com
          #   git remote set-url origin git@github.com:Kura-Team-6/pipe-in-a-pipe.git


      # - run:
      #     name: dockerize
      #     command: |
      #       cd terraform
      #       ssh -i pipe_ssh -o "StrictHostKeyChecking no" ubuntu@184.72.68.239 'bash -s' <<'ENDSSH'
      #         cd pipe-in-a-pipe
      #         git checkout working-1-19
      #         docker build -t react-container client/.
      #         docker build -t flask-container backend-flask/.
      #         docker run -d -p 3000:3000 react-container 
      #         docker run -d flask-container 
      #       ENDSSH 
      notify:
        docker:
          - image: 'cimg/base:stable'
        - slack/notify:
            channel: C02UZ005JN6
            event: fail
            mentions: '@EngineeringTeam'
            template: basic_fail_1
#       - slack/notify:
#           channel: C02UZ005JN6
#           event: pass
#           template: success_tagged_deploy_1
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd terraform
            terraform plan -destroy 
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd terraform
            terraform apply -auto-approve 

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      # - hold-apply:
      #     type: approval
      #     requires:
      #       - plan-apply
      - apply:
          requires:
            - plan-apply
#       - plan-destroy:
#           requires:
#             - apply
#       - hold-destroy:
#           type: approval
#           requires:
#             - plan-destroy
#       - destroy:
#           requires:
#             - hold-destroy
   

